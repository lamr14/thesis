%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 11.0.0
%%For: (Mathias Liebing) (ZTW TU Clausthal)
%%Title: (Logo_TUC_de_RGB.eps)
%%CreationDate: 4/11/2005 2:43 PM
%%BoundingBox: 120 615 487 684
%%HiResBoundingBox: 120.064 615.687 486.9707 683.9517
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_screens_AI5 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%RGBCustomColor: 0 0.549 0.3098 (HKS 57 K)
%%+ 0.5921 0.6314 0.5882 (HKS 91 K)
%%+ 0.4157 0.451 0.4549 (HKS 92 K)
%%RGBProcessColor: 0.1373 0.1216 0.1255 (0c 0m 0y 100k)
%%+ 0.1373 0.1216 0.1255 (0c 0m 0y 100k-1)
%%+ 0 0.702 0.4902 (80c 0m 70y 0k)
%%+ 0 0 0 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 3 () 
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 17.5 12.5 593.5 780.5
%AI3_DocumentPreview: PC_ColorTIFF
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 2
%AI5_ArtFlags: 0 0 0 1 0 0 0 0 0
%AI5_TargetResolution: 300
%AI5_NumLayers: 3
%AI8_OpenToView: 44.5 823.5 2 1002 661 26 0 1 11 68 0 0
%AI5_OpenViewLayers: 777
%%PageOrigin:0 0
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI7_Thumbnail: 128 24 8
%%BeginData: 4882 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45121112111211121112111211121112111211121112111234FD68FF
%0B120B120B120B120B120B120B120B120B120B120B120B35FD68FF121112
%111211121134111211121112121211121112111234FD68FF0B120B120B12
%0B845F110B120B110BA85F110B120B120B5FFD68FF12111211120B84FF84
%0B1211121134A8FF34121112111234FD68FF0B120B120B1234345FAEA812
%34AFA83B11120B120B120B5FFD68FF12111211AE8334833484FF0B5FFF5F
%345F34AE5912111234FD68FF0B123483A8FF84AF5984FFAEA8FF8384A884
%FF8459120B35FD68FF12113484AFFFFF34AEAFFD05FF5983FFFF848A1112
%34FD68FF0B120B5FA8FFA81184AFFD04FFAE5F11FFFF8412120B35FD68FF
%120B3459AFFFAF34AEA8FF5FAFFFFF5F5FFFFF843B0B1234FD68FF0B1134
%83A8FFA8AFA8AEFF5F5FFFA8FFA8FFFF8459120B5FFFFFA8A87DA87DA8A8
%A87DFD07A8FFFFFFFD04A8FD0BFFA8A87DA8A8FFFFFFA8A8A8FD21FFA8A8
%7DFD11FFA8A87DFF121134A8FFFFFF5FAEAEAF11AFFFFF5F84FFFFFF8411
%1234FFFFFF52A8A8A8527DA8A852A8A87D52A8A8FFFFFFA87D52A8FD09FF
%A87DA8A8A87D7D7DFFA87D52A8FD22FF7D7DA8FD10FFA8527DFF0B120B34
%FF5FA85F83FF841159FFA85F848384AE0B120B5FFFFF7DA8FFFFA852A8FF
%FFA87DFF7D52A8FD05FFA87DFD09FF7D52FD05FFA87DA8FFA852A8FD1DFF
%52FD04FFA852FD12FF7D7DFF1211120BAF845FA8FFAEFF348AFFFFAFAE34
%AF5F12111234FD07FF52A8FD05FFA852FD06FFA87DFD08FFA852FD07FF7D
%FFFFFF52A8FD1CFF7D7DFD04FFA87DA8FD11FF7D7DFF0B120B1134FF3435
%84AEA8AEA8AFA8841283A8120B120B35FD06FFA8527DFD05FF7D52A8FD05
%FFA87DFD07FFA852A8FD0AFFA852A8FFFFFFFD047DA8FFA8A87D7DFFFFA8
%A87DA8FFFFFD047DA8FFA87D52A87DA8FFA852A87D7D527DA8FFFFFFA8FD
%047DFFFFFFA87D7DFF121112111212120B3A3484A8AF5F34FD04120B1211
%1134FD07FF52A8FD05FFA852FD07FF7DFD07FF7D7DA8FD0BFF52A8FFFF7D
%7DFFFF7D7DFFFFA87D7DFFFFFF7D7DA8FFA87DA8FFA8A8FFA87D7D7DA8A8
%FFA87D7DA8FFFF527DFFFFFF7D7DFFA87D7DFFFFFF7D7DFF0B120B120B12
%0B120B120B120B120B120B343435345F345FFD06FFA8527DFD05FF7D52A8
%FD05FFA87DFD07FF7D52A8FD0AFFA87DA8FFFFFFA8FFFFA852FFFFFF7D7D
%FFFFFFA852FFFFA852A8FFFFA8FFFFA852FD04FFA852A8FFFFFF7D52FFFF
%FFA8FFFFFF527DFFFFFF7D7DFF1211121112111211121112111211121112
%34FD0DFF52A8FD05FFA852FD07FF7DFD07FF7D52A8FD0BFF52A8FD04FFA8
%A8527DFFFFFF7D7DFFFFFFA87DA8FFFF7D527DFD04FF7D7DFD04FFA87DA8
%FFFFFF7D7DFD05FFA87D7D7DFFFFFF7D7DFF0B120B120B120B120B120B12
%0B120B120B35FFA87D7D7DA8FD06FFA8527DFD05FF7D52A8FD05FFA87DFD
%07FFA852A8FD0AFFA852A8FFFFA8527DA87D52FFFFFF527DFFFFFFA852A8
%FFFFFFA8527DA8FFFFA852FD04FFA852A8FFFFFFA852FFFFFFA87D7DFF52
%7DFFFFFF7D7DFF121112111211121112111211121112111234FF7D7D527D
%7DFD07FF52A8FD06FF52A8FD05FFA87DFD07FFA87D7DFD0BFF52A8FFFF52
%A8FFFF7D7DFFFFFF7D7DFFFFFFA87DA8FD05FF527DFFFF7D7DFD04FFA87D
%A8FFFFFF7D7DFFFFA852A8FFFF7D7DFFFFFF7DA8FF0B120B120B120B120B
%120B120B120B120B35FF7D527D527DFD06FFA8527DFD05FFA87D52FD05FF
%52FD09FF7D527DFD06FF7DA8FFA852A8FFA852A8FFFF7D52FFFFFF527DFF
%FFFF7D52FFFFFFA8FFFFA852FFFFA852FD04FFA852FD04FFA852FFFFA852
%FFFFFF527DFFFFFF7D7DFF1211120B1211120B1211120B1211120B1234FF
%7D7D52527DFD06FFA852A8FD06FFA87D7DA8A8A87DA8FD0AFF7D7D7DFFFF
%FFA8A852FFFFA852A8FFFF527DA8A87D7D7DFFFFA852A8A8A8527D7DFFA8
%7DFFFF527DFFFFA8527DA8A8FF7D52A8FFFFFF7D7DA8FFA8527DA87D7D52
%A8FFFF527DA834353434343534343435343434353434345FFFA87D7D7DA8
%FD05FFA87D7D7DA8FD06FFA8A87D7D7DA8FD0CFFA8FD067DFFFFA87DA87D
%A8FFA8527DA8A87DA8A8FFA87D527DA8FF7DA8A8FFFD047DA8FFFFFF7D7D
%7DFFA87D7D7DA8FFA87D7DA8A8FF7D7D7DFF7D7DA8FF7DA87DA8
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.2 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 15 dict dup begin
put
/initialize
{
	Adobe_screens_AI5 begin
	/screenid
		deviceDPI 600 gt composite? not or
		{
		-1
		}
		{
			deviceDPI currentScreenFreq 
			dup dup 60 ge exch 150 le and deviceDPI 300 le and
		{
			pop 60
		} if
		div 1.41421 div 0.5 add cvi
		} ifelse
	def
	
	2 screenid eq
	{
		/customsize 16 def
		/customdata /customdata2 def
		setcustomscreen
	} if
	
	3 screenid eq
	{
		/customsize 24 def
		/customdata /customdata3 def
		setcustomscreen
	} if
	
	4 screenid eq
	{
		/customsize 16 def
		/customdata /customdata4 def
		setcustomscreen
	} if
	
	5 screenid eq
	{
		/customsize 20 def
		/customdata /customdata5 def
		setcustomscreen
	} if
	
	6 screenid eq
	{
		/customsize 24 def
		/customdata /customdata6 def
		setcustomscreen
	} if
	
	7 screenid eq
	{
		/customsize 28 def
		/customdata /customdata7 def
		setcustomscreen
	} if
	
	8 screenid eq
	{
		/customsize 16 def
		/customdata /customdata8 def
		setcustomscreen
	} if
} def
/terminate
{
	currentdict Adobe_screens_AI5 eq
	{
	 end
	} if
} def
/setcustomscreen
{
	deviceDPI customsize div 0
	{
		1 add 2 div customsize mul cvi exch
		1 add 2 div customsize mul cvi exch
		customsize mul add
		customdata load exch get 256 div
	} setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade false put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRider
currentpacking true setpacking
setpacking
%AI3_EndRider
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Angleichungen-Zusatzmodul) (Live-Angleichungen.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Musterpinsel-Zusatzmodul) (Bild auf Pfad.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Bildpinsel-Zusatzmodul) (Bild auf Pfad.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Kalligraphiepinsel-Zusatzmodul) (Kalligrafiepinsel-Werkzeug.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Spezialpinsel-Zusatzmodul) (Spezialpinsel-Werkzeug.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe H\374llen-Zusatzmodul) (H\374llen und Verkr\374mmen.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Zusammengesetzte Form) (PathFinder-Suite.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbole.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (Blendenflecke.aip)
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
0.749 0.6784 0.6706 0.902 ([Registration]) 0 Xs
([Registration]) Pc
0.698 0.6745 0.6392 0.7412 0.1373 0.1216 0.1255 (0c 0m 0y 100k) 0 1 Xk
(0c 0m 0y 100k) Pc
0.698 0.6745 0.6392 0.7412 0.1373 0.1216 0.1255 (0c 0m 0y 100k-1) 0 1 Xk
(0c 0m 0y 100k-1) Pc
0.7804 0.0039 0.6941 0 0 0.702 0.4902 (80c 0m 70y 0k) 0 1 Xk
(80c 0m 70y 0k) Pc
0.8667 0.2039 0.9059 0.0627 0 0.549 0.3098 (HKS 57 K) 0 1 Xx
(HKS 57 K) Pc
0.4353 0.2902 0.4039 0.0078 0.5921 0.6314 0.5882 (HKS 91 K) 0 1 Xx
(HKS 91 K) Pc
0.6039 0.4588 0.4667 0.1333 0.4157 0.451 0.4549 (HKS 92 K) 0 1 Xx
(HKS 92 K) Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 0 0 0 1 0 79 128 255 0 100 Lb
(Background) Ln
0 A
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 100 Lb
(Guides) Ln
0 A
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 100 Lb
(Foreground) Ln
0 A
u
u
300 Ar
0 O
0.5176 0.4314 0.4314 0.0745 0.502 0.502 0.502 Xa
0 J 0 j 1 w 4 M []0 d0 XR
187.8115 628.6133 m
187.8115 616.2051 L
175.4028 616.2051 L
175.4028 628.6133 l
187.8115 628.6133 L
f
U
0.8667 0.2 0.9098 0.0588 0 0.5529 0.3098 Xa
187.813 633.144 m
187.813 683.9517 L
120.064 683.9517 l
120.064 616.2036 L
170.8765 616.2036 L
170.8765 633.1411 l
187.813 633.144 L
f
0 0 0 0 1 1 1 Xa
3.8637 M137.1025 662.0898 m
137.4966 662.2021 137.5527 661.8955 138.0693 661.9878 c
138.6104 662.084 138.8301 662.2734 y
138.4194 661.6138 137.9849 661.5742 v
137.6436 661.5435 137.4629 661.7021 137.1665 661.7085 c
136.8184 661.7148 136.5439 661.6265 y
136.7061 661.9761 137.1025 662.0898 V
f
170.7539 662.0156 m
170.3604 662.1289 170.3042 661.8213 169.7871 661.9136 c
169.2466 662.0098 169.0269 662.1987 y
169.437 661.5396 169.8721 661.5 v
170.2134 661.4692 170.394 661.6279 170.6904 661.6338 c
171.0381 661.6411 171.313 661.5522 y
171.1509 661.9019 170.7539 662.0156 V
f
164.0171 663.0293 m
161.2334 663.0293 L
161.2334 638.2607 L
162.9854 637.7539 164.0645 637.251 Y
164.0571 641.0005 L
164.7886 640.8257 165.73 640.7388 165.8613 640.4751 C
166.5874 639.0151 L
167.3496 640.146 167.313 640.2915 V
167.2778 640.439 167.2036 641.0581 Y
168.2207 643.8711 169.7813 644.0898 v
170.7295 644.2227 169.5684 645.9253 170.1431 646.5342 c
170.6909 647.1143 171.8853 647.4814 172.2847 647.2998 c
172.6841 647.1177 172.0303 645.9146 172.1401 645.4033 c
172.2485 644.8916 173.3364 643.6143 Y
172.2485 641.606 L
170.4697 641.7891 170.1069 641.606 v
169.7437 641.4229 169.3096 641.0947 169.272 640.9492 C
169.7046 640.9805 170.5864 640.9321 Y
169.2378 640.252 169.3711 638.9927 V
170.3628 639.5869 170.6816 639.7568 171.2681 639.8179 C
170.9287 639.2666 170.8447 638.207 171.5195 637.5229 C
172.063 638.9434 172.4756 639.5161 173.293 639.4658 C
173.3438 639.4033 173.6108 638.6821 173.6768 638.1377 C
174.7632 639.1108 174.0693 640.3672 174.3711 640.9312 C
174.7334 641.4419 176.2769 643.1514 176.3389 643.5068 c
176.4268 644.0161 175.7983 645.3887 175.8716 645.6812 C
175.9097 645.8423 176.334 646.4238 176.7197 646.9351 C
176.7178 646.939 176.9829 647.293 V
179.7568 647.3721 179.8369 649.9097 v
179.916 652.4458 176.4175 654.4595 178.0474 658.5039 c
178.2148 658.9258 179.313 658.564 179.5737 660.0879 C
179.8042 661.0347 179.3433 661.8359 179.1792 662.313 C
178.8584 663.0308 179.4165 663.4014 179.3765 663.5244 C
177.2251 662.5107 176.5762 659.3359 177.4473 658.7026 C
176.7744 656.979 176.853 655.71 V
176.9326 654.4429 178.272 652.3276 178.4102 651.8101 C
179.4736 650.2148 178.3774 648.563 177.1895 648.7222 C
176.3179 650.3857 175.8882 651.4146 175.124 653.9077 c
174.9819 654.3706 175.8247 654.3174 176.1104 654.0313 c
176.5063 653.6338 174.8545 656.7383 174.5381 657.2935 c
174.2212 657.8481 175.8013 658.0083 176.2339 657.8076 c
176.6875 657.5962 175.0259 659.4634 174.9351 660.7715 c
174.8955 661.3335 175.3271 662.334 176.2295 662.334 c
176.457 662.334 175.5879 663.6714 175.5176 663.9111 c
175.2407 664.8682 176.0894 664.6733 176.0303 665.2949 C
175.9839 665.7681 175.3433 666.1899 174.8774 665.9771 c
174.5562 665.8276 174.1108 665.4658 Y
174.02 665.4961 173.5337 665.6167 V
173.333 665.9707 173.2744 666.541 172.9072 666.541 c
172.6445 666.541 172.4106 666.4502 172.2852 666.3247 c
172.1592 666.1992 172.2212 666.0737 172.2798 665.9238 c
172.3115 665.8452 172.4263 665.6348 Y
172.6987 665.6309 L
172.0283 665.3579 171.5757 665.0527 171.3369 664.9727 c
171.0996 664.894 170.3291 664.4971 170.1685 664.3369 c
170.1221 664.292 170.1064 664.0952 170.1865 663.9243 C
170.2622 663.7573 170.1777 663.7285 170.1001 663.6855 c
169.7744 663.5039 170.0879 662.8394 170.1494 662.6943 C
170.1953 662.585 171.6367 663.1826 171.7549 663.0654 c
171.8701 662.9487 171.9468 661.5732 171.6304 661.4951 c
171.313 661.4155 170.5864 661.2505 170.5308 661.0146 c
170.502 660.8945 170.7764 660.2778 171.3306 660.2778 c
171.8862 660.2778 171.3071 659.8662 170.9897 659.7866 c
170.7256 659.7207 170.3101 659.7773 170.1787 659.7993 C
167.7476 662.5313 L
167.9175 662.6553 168.1436 662.835 168.3887 663.0801 c
168.9004 663.5908 168.8643 663.897 168.8643 664.1523 c
168.8643 664.4092 168.4941 664.7788 Y
168.5215 664.2935 168.3232 664.0952 v
168.1245 663.897 167.8003 663.8472 Y
167.5015 664.1304 167.3618 664.3716 v
167.2041 664.646 167.0298 664.7275 167.1582 665.3115 c
167.2856 665.8945 167.5024 665.9639 Y
167.1538 666.1333 166.7212 665.7344 v
166.3369 665.3813 166.5635 664.7085 166.2773 664.5264 c
166.0127 664.3579 165.7271 664.8135 165.7271 665.147 c
165.7271 665.4814 165.8955 665.9302 Y
165.6787 665.9473 165.4126 665.6475 v
164.9116 665.0806 165.3164 664.6318 165.3164 664.1348 c
165.3164 663.8047 164.877 663.9819 164.7305 664.2295 c
164.5596 664.5156 164.5894 664.9536 Y
164.2031 664.8364 164.2031 664.4673 v
164.2031 664.0977 164.3462 663.7876 164.4155 663.6431 c
164.4878 663.4917 165.0024 663.0562 165.356 662.4927 C
166.0112 661.8926 L
166.9946 660.752 167.1934 660.2183 167.2979 660.0103 c
167.4219 659.7646 168.4429 658.644 168.8921 658.1553 C
168.4141 657.5225 167.9585 656.3652 168.064 655.9966 c
168.23 655.416 168.6348 654.6646 169.0791 653.9985 c
169.2534 653.7368 168.3599 653.1646 Y
167.3423 652.1089 L
167.2251 652.2593 167.0513 652.458 166.8193 652.6699 c
166.334 653.1138 166.0586 653.0698 165.8267 653.0605 C
165.5938 653.0503 165.2734 652.6997 Y
165.7114 652.7437 165.9004 652.5703 v
166.0889 652.3984 166.1455 652.106 Y
165.9014 651.8232 165.686 651.689 V
165.4443 651.5342 165.377 651.373 164.8428 651.4663 c
164.3076 651.5586 164.2363 651.7529 Y
164.0962 651.4292 164.4756 651.0513 v
164.8105 650.7173 165.4121 650.9492 165.5889 650.6968 c
165.7529 650.4634 165.3501 650.1865 165.0469 650.1743 C
164.7437 650.1597 164.3296 650.2954 Y
164.3228 650.0981 164.606 649.8667 v
165.1392 649.4355 165.5313 649.8213 165.9824 649.8408 c
166.2827 649.854 166.1382 649.4478 165.9199 649.3037 c
165.6655 649.1382 165.269 649.147 Y
165.3901 648.8027 165.7241 648.8174 V
166.0601 648.8315 166.3345 648.9707 166.4648 649.042 c
166.5991 649.1138 166.9741 649.5977 167.4722 649.9409 C
168.0181 650.8906 L
168.3364 650.9702 168.1826 650.543 168.4199 650.4634 c
168.6577 650.3838 169.5205 651.4868 170.0259 651.7544 c
170.2813 651.8896 170.4561 651.1807 170.7759 650.6362 C
170.6455 650.7041 L
169.1997 649.9966 167.208 648.3384 166.9136 647.1553 c
166.5874 645.8408 166.9858 645.002 167.022 644.856 C
167.0601 644.7104 166.5508 643.5059 166.5146 643.3213 C
166.0259 643.1875 164.8691 642.9575 164.0542 642.5479 C
164.0171 663.0293 L
f
143.8398 663.103 m
146.6235 663.103 L
146.6235 638.335 L
144.8716 637.8286 143.793 637.3247 Y
143.7993 641.0747 L
143.0684 640.8999 142.1265 640.8135 141.9951 640.5493 C
141.2695 639.0894 L
140.5073 640.2202 140.5435 640.3662 V
140.5791 640.5132 140.6533 641.1323 Y
139.6362 643.9453 138.0752 644.1641 v
137.1274 644.2964 138.2886 646 137.7139 646.6089 c
137.1655 647.1885 135.9712 647.5562 135.5723 647.3745 c
135.1724 647.1919 135.8267 645.9893 135.7168 645.4775 c
135.6084 644.9658 134.52 643.6885 Y
135.6084 641.6802 L
137.3867 641.8638 137.749 641.6802 v
138.1133 641.4971 138.5474 641.1694 138.585 641.0229 C
138.1523 641.0547 137.27 641.0063 Y
138.6191 640.3257 138.4854 639.0669 V
137.4941 639.6616 137.1753 639.8315 136.5894 639.8921 C
136.9282 639.3408 137.0122 638.2817 136.3369 637.5967 C
135.7939 639.0176 135.3813 639.5908 134.564 639.54 C
134.5132 639.4775 134.2451 638.7568 134.1802 638.2119 C
133.0933 639.1851 133.7871 640.4414 133.4858 641.0049 C
133.123 641.5161 131.5801 643.2256 131.5181 643.5815 c
131.4302 644.0898 132.0586 645.4629 131.9854 645.7559 C
131.9468 645.9165 131.5229 646.498 131.1372 647.0093 C
131.1387 647.0132 130.874 647.3667 V
128.1001 647.4463 128.02 649.9839 v
127.9404 652.5195 131.4395 654.5342 129.8096 658.5781 c
129.6421 659 128.5439 658.6382 128.2832 660.1611 C
128.0527 661.1089 128.5137 661.9102 128.6777 662.3877 C
128.9985 663.1055 128.4399 663.4756 128.48 663.5986 C
130.6318 662.585 131.2808 659.4102 130.4092 658.7773 C
131.082 657.0522 131.0039 655.7837 V
130.9238 654.5176 129.585 652.4019 129.4468 651.8848 C
128.3828 650.2891 129.4795 648.6372 130.6675 648.7964 C
131.5391 650.46 131.9688 651.4888 132.7329 653.9819 c
132.8745 654.4453 132.0322 654.3916 131.7461 654.1045 c
131.3506 653.7075 133.0024 656.8125 133.3188 657.3677 c
133.6357 657.9229 132.0557 658.083 131.623 657.8823 c
131.1689 657.6704 132.8311 659.5376 132.9219 660.8457 c
132.9604 661.4082 132.5298 662.4082 131.627 662.4082 c
131.3994 662.4082 132.269 663.7456 132.3384 663.9854 c
132.6157 664.9429 131.7671 664.7476 131.8267 665.3696 C
131.873 665.8423 132.5137 666.2642 132.979 666.0513 c
133.3008 665.9019 133.7461 665.5405 Y
133.8369 665.5703 134.3228 665.6914 V
134.5234 666.0439 134.5825 666.6152 134.9497 666.6152 c
135.2124 666.6152 135.4463 666.5249 135.5718 666.3989 c
135.6978 666.2739 135.6357 666.1479 135.5767 665.9985 c
135.5454 665.9189 135.4297 665.7095 Y
135.1577 665.7051 L
135.8281 665.4321 136.2813 665.127 136.52 665.0474 c
136.7573 664.9683 137.5273 664.5713 137.6885 664.4116 c
137.7349 664.3657 137.7505 664.1694 137.6704 663.998 C
137.5947 663.832 137.6792 663.8032 137.7568 663.7598 c
138.083 663.5781 137.769 662.9131 137.707 662.7681 C
137.6616 662.6592 136.2197 663.2573 136.1021 663.1392 c
135.9863 663.0225 135.9102 661.6479 136.2261 661.5698 c
136.5439 661.4897 137.27 661.3247 137.3262 661.0889 c
137.355 660.9688 137.0806 660.3521 136.5264 660.3521 c
135.9707 660.3521 136.5493 659.9399 136.8672 659.8613 c
137.1313 659.7949 137.5469 659.8521 137.6782 659.874 C
140.1094 662.605 L
139.939 662.7285 139.7134 662.9087 139.4683 663.1533 c
138.9565 663.665 138.9927 663.9717 138.9927 664.2266 c
138.9927 664.4834 139.3628 664.853 Y
139.335 664.3682 139.5337 664.1694 v
139.7324 663.9717 140.0562 663.9219 Y
140.355 664.2041 140.4951 664.4458 v
140.6528 664.7202 140.8271 664.8018 140.6987 665.3857 c
140.5708 665.9688 140.3545 666.0381 Y
140.7026 666.2075 141.1357 665.8081 v
141.5195 665.4551 141.2935 664.7827 141.5791 664.6006 c
141.8442 664.4316 142.1294 664.8882 142.1294 665.2217 c
142.1294 665.5557 141.9614 666.0044 Y
142.1777 666.022 142.4438 665.7222 v
142.9453 665.1548 142.5405 664.7061 142.5405 664.209 c
142.5405 663.8789 142.9795 664.0562 143.127 664.3042 c
143.2969 664.5898 143.2676 665.0273 Y
143.6538 664.9106 143.6538 664.541 v
143.6538 664.1714 143.5107 663.8618 143.4414 663.7173 c
143.3687 663.5654 142.854 663.1299 142.5005 662.5669 C
141.8452 661.9668 L
140.8623 660.8257 140.6631 660.2925 140.5586 660.084 c
140.4351 659.8384 139.4141 658.7183 138.9648 658.2295 C
139.4424 657.5967 139.8975 656.439 139.7925 656.0708 c
139.627 655.4902 139.2227 654.7388 138.7778 654.0732 c
138.6035 653.811 139.4976 653.2388 Y
140.5146 652.1836 L
140.6323 652.334 140.8057 652.5322 141.0371 652.7437 c
141.5225 653.1885 141.7983 653.144 142.0303 653.1348 C
142.2632 653.124 142.5835 652.7739 Y
142.1455 652.8179 141.9561 652.6445 v
141.7676 652.4727 141.7109 652.1807 Y
141.9561 651.897 142.1709 651.7632 V
142.4131 651.6089 142.4795 651.4473 143.0142 651.5405 c
143.5493 651.6333 143.6201 651.8276 Y
143.7603 651.5034 143.3813 651.126 v
143.0469 650.7915 142.4448 651.0234 142.2676 650.7715 c
142.104 650.5381 142.5068 650.2603 142.8101 650.248 C
143.1133 650.2344 143.5269 650.3701 Y
143.5342 650.1724 143.2515 649.9414 v
142.7178 649.5103 142.3257 649.896 141.8745 649.915 c
141.5742 649.9277 141.7188 649.5225 141.937 649.3784 c
142.1914 649.2129 142.5874 649.2217 Y
142.4668 648.877 142.1323 648.8916 V
141.7969 648.9058 141.522 649.0454 141.3921 649.1162 c
141.2578 649.188 140.8828 649.6719 140.3848 650.0146 C
139.8389 650.9648 L
139.52 651.0439 139.6743 650.6172 139.4375 650.5381 c
139.1992 650.4585 138.3369 651.5615 137.8311 651.8281 c
137.5752 651.9644 137.4009 651.2554 137.0811 650.7104 C
137.2114 650.7788 L
138.6572 650.0703 140.6484 648.4126 140.9434 647.229 c
141.2695 645.915 140.8711 645.0762 140.835 644.9302 C
140.7969 644.7852 141.3062 643.5801 141.3423 643.3955 C
141.8306 643.2612 142.9878 643.0322 143.8022 642.6221 C
143.8398 663.103 L
f
148.0942 637.3828 m
149.3403 636.3779 151.4604 635.5742 154.04 635.5742 c
156.6318 635.5742 159.0283 636.3838 160.271 637.396 c
158.9272 637.7788 156.6162 638.1333 154.0166 638.1953 c
151.6353 638.2515 149.4067 637.7871 148.0942 637.3828 C
f
160.2148 667.3501 m
165.0806 672.2148 L
163.4468 673.8486 L
165.106 675.5078 L
169.1309 671.4844 L
168.9575 670.1816 L
168.7739 668.5215 L
166.2383 671.0566 L
160.2139 665.0317 L
160.2134 663.1582 L
160.2134 638.5635 L
158.5703 638.9502 156.4756 639.2964 154.1123 639.355 C
151.6831 639.4126 149.4487 639.0503 147.6846 638.6182 C
147.6846 663.103 L
147.6997 665.1885 L
141.8135 670.6138 L
139.6904 668.4917 L
138.0303 670.1523 L
143.3574 675.479 L
145.0186 673.8184 L
142.9722 671.7734 L
147.6997 667.5059 L
147.6997 669.2163 L
151.4028 669.2163 L
151.4028 663.2183 L
156.4883 663.2183 L
156.4883 669.2163 L
160.2197 669.2163 L
160.2148 667.3501 L
f
u
0.8667 0.2039 0.9059 0.0627 0 0.549 0.3098 Xa
4 M135.7344 664.3682 m
135.7344 664.1343 135.5386 663.9429 135.2969 663.9429 c
135.0552 663.9429 134.8604 664.1343 134.8604 664.3682 c
134.8604 664.6045 135.0552 664.7954 135.2969 664.7954 c
135.5386 664.7954 135.7344 664.6045 135.7344 664.3682 C
f
U
u
172.1226 664.2935 m
172.1226 664.0601 172.3184 663.8687 172.5601 663.8687 c
172.8018 663.8687 172.9966 664.0601 172.9966 664.2935 c
172.9966 664.5303 172.8018 664.7212 172.5601 664.7212 c
172.3184 664.7212 172.1226 664.5303 172.1226 664.2935 C
f
U
u
153.9932 641.0601 m
156.3262 642.4663 156.1235 644.8154 V
155.9946 646.3452 154.4458 646.9297 154.5 648.1646 C
154.5776 649.8501 155.8037 650.3311 155.1792 652.2603 c
154.3691 654.7661 151.8623 655.0645 Y
153.6523 653.0688 152.8599 651.001 v
152.0864 648.9824 150.6895 648.9751 151.1118 645.2085 c
151.4585 642.1064 153.9932 641.0601 Y
f
U
u
0.5176 0.4314 0.4314 0.0745 0.502 0.502 0.502 Xa
213.1382 622.1797 m
213.1382 617.7266 212.9463 617.9658 217.2563 617.439 c
217.2563 616.1943 L
204.374 616.1943 L
204.374 617.439 L
208.6841 617.9658 208.4927 617.7266 208.4927 622.1797 c
208.4927 648.7671 L
204.1826 648.7671 L
200.0156 648.7671 199.0581 646.1338 197.4775 642.9731 c
196.2808 642.9731 L
197.5732 650.2993 L
224.0566 650.2993 L
225.3496 642.9731 L
224.1523 642.9731 L
222.5723 646.1338 221.6147 648.7671 217.4478 648.7671 c
213.1382 648.7671 L
213.1382 622.1797 l
f
*u
235.4111 630.2026 m
235.4111 623.499 237.2314 618.3745 244.3662 618.3745 c
250.9272 618.3745 254.3755 622.7803 254.3755 630.4419 c
254.3755 643.7544 L
254.3755 644.7598 254.1841 645.5737 254.0884 646.3398 c
253.8486 648.064 252.2207 648.7344 249.9697 648.9746 c
249.9697 650.2192 L
261.2715 650.2192 L
261.2715 648.9746 L
258.9727 648.7344 257.3926 648.064 257.1528 646.3398 c
257.0571 645.5737 256.8657 644.7598 256.8657 643.7544 c
256.8657 630.2505 L
256.8657 619.9551 250.3052 616.124 244.127 616.124 c
233.9263 616.124 230.7661 621.2959 230.7661 629.9634 c
230.7661 644.2329 L
230.7661 648.686 230.9575 648.4468 226.647 648.9746 c
226.647 650.2192 L
239.5298 650.2192 L
239.5298 648.9746 L
235.2192 648.4468 235.4111 648.686 235.4111 644.2329 C
235.4111 630.2026 l
f
*U
*u
310.4492 624.7856 m
309.0117 618.7993 L
309.0117 617.7456 308.1504 617.5542 306.8096 617.123 c
304.9902 616.501 301.6377 615.687 297.4712 615.687 c
287.6538 615.687 278.7944 620.3794 278.7944 633.2129 c
278.7944 640.5879 285.0679 650.3569 297.9497 650.3569 c
302.5957 650.3569 304.7983 649.4951 307.1445 648.728 c
308.4863 648.2974 309.0117 647.627 309.0117 646.8608 c
309.0117 640.6836 L
307.7676 640.6836 L
307.624 644.5142 305.1816 648.6802 297.5669 648.6802 c
288.6113 648.6802 284.3018 642.2158 284.2539 633.5962 c
284.2056 624.0674 288.5635 617.3628 298.333 617.3628 c
304.7026 617.3628 307.6719 621.0024 309.2041 624.7856 C
310.4492 624.7856 l
f
*U
*u
321.5596 651.3623 m
321.5596 622.2476 L
321.5596 617.9375 321.3203 618.0811 325.3916 617.5063 c
325.3916 616.2612 L
313.418 616.2612 L
313.418 617.5063 L
317.4902 618.0811 317.251 617.9375 317.251 622.2476 c
317.251 646.6689 L
317.251 647.9629 316.6738 648.7759 315.4307 648.7759 c
313.418 648.7759 L
313.418 650.021 L
316.291 650.1167 319.3574 650.6919 321.4639 651.458 C
321.5596 651.3623 l
f
*U
*u
343.3027 615.687 m
342.584 616.5488 342.2012 618.0332 342.2012 619.4697 c
338.4639 616.9795 L
337.3643 616.2612 336.0234 615.687 334.5381 615.687 c
331.377 615.687 328.7432 618.4644 328.7432 621.9604 c
328.7432 626.5093 331.4258 627.9458 337.0293 630.1484 c
342.2012 632.1597 L
342.2012 636.3262 341.0996 639.1035 338.1289 639.1035 c
335.208 639.1035 334.2021 636.4697 333.0537 634.7451 c
332.9102 634.5059 332.7178 634.5059 332.4316 634.5537 c
330.8018 634.9365 L
330.5156 635.0332 330.3711 635.2241 330.4189 635.5601 c
331.1377 638.0977 L
331.4258 639.0078 331.9521 639.3906 332.5273 639.5825 c
334.7295 640.4443 336.3574 640.7793 338.4639 640.7793 c
344.0684 640.7793 346.5107 638.2896 346.5107 633.0693 c
346.5107 622.4395 L
346.5107 619.9961 346.6543 617.9375 349.8633 619.1831 c
350.1504 617.8418 L
343.3027 615.687 l
f
1 D
342.2012 630.3398 m
337.9854 628.7598 333.0537 627.6104 333.0537 622.7266 c
333.0537 620.4751 334.5381 618.6558 336.7402 618.6558 c
339.2314 618.6558 342.2012 620.2847 342.2012 626.605 C
342.2012 630.3398 l
f
*U
*u
0 D
372.3711 615.687 m
371.6523 616.501 371.2695 617.9854 371.2695 619.374 c
367.0557 616.9321 L
365.0439 615.7827 363.9902 615.687 362.6016 615.687 c
357.0938 615.687 355.6094 619.6621 355.6094 625.0249 c
355.6094 635.5112 L
355.6094 637.7144 354.125 637.5229 351.7773 637.5229 c
351.7773 638.7681 L
354.3633 638.8638 357.5723 639.439 359.8242 640.7793 c
359.9199 640.6836 L
359.9199 625.4556 L
359.9199 621.8643 360.4951 618.5117 364.709 618.5117 c
369.1631 618.5117 371.2695 620.9067 371.2695 627.9937 c
371.2695 635.5112 L
371.2695 637.7144 369.7842 637.5229 367.4385 637.5229 c
367.4385 638.7681 L
370.0723 638.8638 373.2803 639.439 375.4834 640.7793 c
375.5791 640.6836 L
375.5791 622.4395 L
375.5791 619.9961 375.7227 617.9375 378.9307 619.1831 c
379.2188 617.8418 L
372.3711 615.687 l
f
*U
*u
382.9551 622.3433 m
384.1982 622.3433 L
384.1523 618.9907 386.6416 617.3628 389.4199 617.3628 c
392.1973 617.3628 393.8252 619.4697 393.8252 621.4814 c
393.8252 624.5938 391.3359 625.6953 388.4619 627.7544 c
384.583 630.5796 383.0029 631.3457 383.0029 634.5059 c
383.0029 638.5288 386.7383 640.7793 390.665 640.7793 c
392.1973 640.7793 394.1133 640.6836 396.3154 639.9653 c
396.3154 635.1772 L
395.0703 635.1772 L
394.9268 636.8047 393.4902 639.1035 390.7598 639.1035 c
388.75 639.1035 387.0723 637.9063 387.0723 636.0391 c
387.0723 633.7397 389.5156 632.4951 393.0117 630.0049 c
397.5127 626.8447 398.0879 625.0728 398.0879 622.8701 c
398.0879 617.8896 393.5859 615.687 389.4199 615.687 c
386.7861 615.687 384.7266 616.1177 382.9551 616.9795 C
382.9551 622.3433 l
f
*U
*u
416.7168 637.8105 m
414.7539 636.8525 L
409.4385 636.8525 L
409.4385 624.2588 L
409.4385 622.3911 409.5342 618.5601 412.6934 618.5601 c
413.9873 618.5601 415.2324 618.6558 416.3818 619.1343 c
416.7168 617.8896 L
411.1611 615.687 L
407.8096 615.687 405.1279 616.6924 405.1279 623.2529 c
405.1279 636.8525 L
401.2959 636.8525 L
401.2959 639.0557 L
405.1279 639.0557 L
405.1279 644.0835 L
405.9902 644.9932 406.9473 645.855 408.1445 646.7646 c
409.4385 646.7646 L
409.4385 639.0557 L
416.7168 639.0557 L
416.7168 637.8105 l
f
*U
*u
427.2529 651.3623 m
427.2529 636.5659 L
429.3125 638.9595 432.7598 640.7793 436.9258 640.7793 c
442.7686 640.7793 443.918 637.2837 443.918 632.3032 c
443.918 622.2476 L
443.918 617.9375 443.6777 618.0811 447.75 617.5063 c
447.75 616.2612 L
435.7764 616.2612 L
435.7764 617.5063 L
439.8477 618.0811 439.6084 617.9375 439.6084 622.2476 c
439.6084 631.0586 L
439.6084 634.0757 439.416 638.2896 434.3408 638.2896 c
428.2109 638.2896 427.2529 633.0215 427.2529 628.0894 c
427.2529 622.2476 L
427.2529 617.9375 427.0137 618.0811 431.084 617.5063 c
431.084 616.2612 L
419.1104 616.2612 L
419.1104 617.5063 L
423.1816 618.0811 422.9424 617.9375 422.9424 622.2476 c
422.9424 646.6689 L
422.9424 647.9629 422.3672 648.7759 421.1221 648.7759 c
419.1104 648.7759 L
419.1104 650.021 L
421.9844 650.1167 425.0508 650.6919 427.1572 651.458 C
427.2529 651.3623 l
f
*U
*u
465.6602 615.687 m
464.9414 616.5488 464.5576 618.0332 464.5576 619.4697 c
460.8232 616.9795 L
459.7207 616.2612 458.3809 615.687 456.8965 615.687 c
453.7354 615.687 451.1016 618.4644 451.1016 621.9604 c
451.1016 626.5093 453.7842 627.9458 459.3867 630.1484 c
464.5576 632.1597 L
464.5576 636.3262 463.4561 639.1035 460.4873 639.1035 c
457.5674 639.1035 456.5615 636.4697 455.4111 634.7451 c
455.2686 634.5059 455.0762 634.5059 454.7891 634.5537 c
453.1611 634.9365 L
452.874 635.0332 452.7295 635.2241 452.7783 635.5601 c
453.4961 638.0977 L
453.7842 639.0078 454.3096 639.3906 454.8848 639.5825 c
457.0879 640.4443 458.7158 640.7793 460.8232 640.7793 c
466.4258 640.7793 468.8691 638.2896 468.8691 633.0693 c
468.8691 622.4395 L
468.8691 619.9961 469.0127 617.9375 472.2207 619.1831 c
472.5088 617.8418 L
465.6602 615.687 l
f
1 D
464.5576 630.3398 m
460.3438 628.7598 455.4111 627.6104 455.4111 622.7266 c
455.4111 620.4751 456.8965 618.6558 459.0986 618.6558 c
461.5889 618.6558 464.5576 620.2847 464.5576 626.605 C
464.5576 630.3398 l
f
*U
*u
0 D
483.1396 651.3623 m
483.1396 622.2476 L
483.1396 617.9375 482.8994 618.0811 486.9707 617.5063 c
486.9707 616.2612 L
474.998 616.2612 L
474.998 617.5063 L
479.0693 618.0811 478.8291 617.9375 478.8291 622.2476 c
478.8291 646.6689 L
478.8291 647.9629 478.2549 648.7759 477.0098 648.7759 c
474.998 648.7759 L
474.998 650.021 L
477.8711 650.1167 480.9365 650.6919 483.043 651.458 C
483.1396 651.3623 l
f
*U
U
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
